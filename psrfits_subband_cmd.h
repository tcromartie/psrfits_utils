#ifndef __psrfits_subband_cmd__
#define __psrfits_subband_cmd__
/*****
  command line parser interface -- generated by clig 
  (http://wsd.iitb.fhg.de/~geg/clighome/)

  The command line parser `clig':
  (C) 1995-2004 Harald Kirsch (clig@geggus.net)
*****/

typedef struct s_Cmdline {
  /***** -dm: Dispersion measure to use for the subband de-dispersion */
  char dmP;
  double dm;
  int dmC;
  /***** -nsub: Number of output frequency subbands */
  char nsubP;
  int nsub;
  int nsubC;
  /***** -dstime: Power-of-2 number of samples to average in time */
  char dstimeP;
  int dstime;
  int dstimeC;
  /***** -startfile: Starting file number of sequence */
  char startfileP;
  int startfile;
  int startfileC;
  /***** -numfiles: Number of files to process */
  char numfilesP;
  int numfiles;
  int numfilesC;
  /***** -outbits: Number of output bits desired */
  char outbitsP;
  int outbits;
  int outbitsC;
  /***** -filetime: Desired length of the resulting files in sec */
  char filetimeP;
  float filetime;
  int filetimeC;
  /***** -filelen: Desired length of the resulting files in GB */
  char filelenP;
  float filelen;
  int filelenC;
  /***** -tgtstd: Target stdev. If 0, set in code based on outbits */
  char tgtstdP;
  float tgtstd;
  int tgtstdC;
  /***** -tgtavg: Target avg for UNSIGNED data. If 0, set in code based on outbits */
  char tgtavgP;
  float tgtavg;
  int tgtavgC;
  /***** -onlyI: Only output total intensity data */
  char onlyIP;
  /***** -weights: Filename containing ASCII list of channels and weights to use */
  char wgtsfileP;
  char* wgtsfile;
  int wgtsfileC;
  /***** -bandpass: Filename containing ASCII list of channels, avgs, stdevs to use */
  char bandpassfileP;
  char* bandpassfile;
  int bandpassfileC;
  /***** -o: Basename for the output files */
  char outputbasenameP;
  char* outputbasename;
  int outputbasenameC;
  /***** uninterpreted command line parameters */
  int argc;
  /*@null*/char **argv;
  /***** the whole command line concatenated */
  char *full_cmd_line;
} Cmdline;


extern char *Program;
extern void usage(void);
extern /*@shared*/Cmdline *parseCmdline(int argc, char **argv);

extern void showOptionValues(void);

#endif

